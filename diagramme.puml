@startuml
class Classe {
+PUBLIC : String
+PRIVATE : String
+PROTECTED : String
+CLASS : String
+INTERFACE : String
+ABSTRACT : String
+nom : String
+acces : String
+type : String
+parents : ArrayList
+attributs : ArrayList
+methodes : ArrayList
+ getAttributs() : ArrayList
+ getMethodes() : ArrayList
+ addAttribut(Attribut) : void
+ updateAttributs() : void
+ getParents() : ArrayList
+ addMethode(Methode) : void
+ getAcces() : String
+ addParent(Classe) : void
- adjustPath(String, int) : String
+ getNom() : String
+ toString() : String
+ getType() : String
}
class AttributClasse {
+cardinalitePointeur : String
+cardinalitePointee : String
+ getAttribut() : Classe
+ setCardinalitePointeur(String) : void
+ setCardinalitePointee(String) : void
+ getCardinalitePointeur() : String
+ getCardinalitePointee() : String
+ toString() : String
}
AttributClasse --> Classe : attribut
class Attribut {
+nom : String
+typeAcces : String
+type : String
+ setType(String) : void
+ getTypeAcces() : String
+ setTypeAcces(String) : void
+ getNom() : String
+ setNom(String) : void
+ toString() : String
+ getType() : String
}
class Methode {
+nom : String
+acces : String
+typeRetour : String
+parametres : ArrayList
+ setParametres(ArrayList) : void
+ setTypeRetour(String) : void
+ getTypeRetour() : String
+ getParametres() : ArrayList
+ getAcces() : String
+ getNom() : String
+ setNom(String) : void
+ setAcces(String) : void
+ toString() : String
}
class Exporter {
+ getDiagramme() : Diagramme
+ exportUML() : void
}
Exporter --> Diagramme : diagramme
class Diagramme {
+nomPackage : String
+listeClasses : ArrayList
+ ajouterClasse(Classe) : void
+ updateClasses() : void
+ getNomPackage() : String
+ setListeClasses(ArrayList) : void
+ setNomPackage(String) : void
+ getListeClasses() : ArrayList
+ supprimerClasse(Classe) : void
+ toString() : String
+ getInstance() : Diagramme
+ initialize(String, ArrayList) : void
}
Diagramme --> Diagramme : instance
@enduml
